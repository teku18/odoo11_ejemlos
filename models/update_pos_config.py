
from odoo import api, fields, models

# FORMA DE ACTUALIZAR LA FUNCION DE UNA CLASE EN ODOO

# SE PUEDE PONER CUALQUIER NOMBRE A LA CLASE NO NECESARIAMENTE
# EL MISMO NOMBRE DE LA MISMA
class PosConfigUpdate(models.Model):
    _inherit='pos.config' #SE TIENE QUE HEREDAR EL MODELO QUE ESTA USANDO LA CLASE

# SE TIENE QUE PONER EL MISMO NOMBRE DE LA FUNCION DE LA CLASE QUE SE ESTA HEREDANDO
# PARA QUE ESTA PUEDA SER AFECTADA, YA SEA PARA REEMPLAZAR A LA FUNCION ANTERIOR
# O PARA EXTENDER A DICHA FUNCION.
    @api.multi #ESTO YA LO TRAIA LA CLASE DE LA CUAL LA ESTOY HEREDANDO XD...
    def open_ui(self): # SE INICIALIZA LA FUNCION CON TODO Y SUS PARAMETROS ANTERIORMENTE ENVIADOS
        # NUEVO CONTENIDO DE LA FUNCION
        print('SALIO....... ????')
        print('SALIO....... ????')
        print('SALIO....... ????')
        print('SALIO....... ????')
        return super(PosConfigUpdate, self).open_ui()
#SI SE REMPLAZARA EL CONTENIDO DE LA FUNCION BASTARIA CON INGRESAR EL CODIGO
#DE MANERA NORMAL Y REGRESAR EL RETURN CON EL RESULTADO

#PARA EXTENDERLA SE USA LA PALABRA CLAVE "SUPER()" PARA LLAMAR AL METODO PADRE
#ES DECIR EL NOMBRE DE LA NUEVA CLASE CREADA, DE IGUALMANERA SE ENVIA EL PARAMETRO "SELF"
#Y POSTERIORMENTE EL NOMBRE DE LA FUNCION ANTEPONIENDOLE UN "." COMO SE MUESTRA EN EL ANTERIOR EJEMPLO

PosConfigUpdate()